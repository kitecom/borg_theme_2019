<%/*
	Â© 2019 NetSuite Inc.
	User may not copy, modify, distribute, or re-bundle or otherwise make available this code;
	provided, however, if you are an authorized user with a NetSuite account or log-in, you
	may use this code subject to the terms that govern your access and use.
*/%><%
	var ROOT_BASE = 'http://localhost'
	,	ROOT = ROOT_BASE + ':7777/'
	,	ROOT_THEME = ROOT_BASE + ':7778/'
	,	ROOT_EXT = ROOT_BASE + ':7779/'
	,	SiteSettings
	,	siteType
	,	Environment
	,	Language
	,	Currency
	,	Error
	,	Application
	,	environmentParamaters
	, 	parameters
	,	session
	,	Utils
	,	Configuration;

	try
	{
		SiteSettings = require('SiteSettings.Model').get();
		Configuration = require('Configuration');
		parameters = request.getAllParameters();
		session = require('SC.Models.Init').session;

		// Access control, if you are not loged this will send you to the log in page
		if (!session.isLoggedIn2() || session.getCustomer().isGuest())
		{
			delete parameters.sitepath;
			parameters.origin = 'customercenter';

			if (parameters.fragment)
			{
				parameters.origin_hash = parameters.fragment;
				delete parameters.fragment;
			}

			return nlapiSetRedirectURL('EXTERNAL', SiteSettings.touchpoints.login, null, false, parameters);
		}

		Application = require('Application');
		Environment = Application.getEnvironment(request);
		environmentParameters = [];
		siteType = SiteSettings.sitetype;
		Utils = require('Utils');

		Language = Environment.currentLanguage && Environment.currentLanguage.locale || '';
		Currency = Environment.currencyCodeSpecifiedOnUrl;

		environmentParameters.push('lang=' + Language);
		environmentParameters.push('cur=' + Currency);
		environmentParameters.push('X-SC-Touchpoint=myaccount');

		_.each(require('ExternalPayment.Model').getParametersFromRequest(request), function(value, key) {
			environmentParameters.push(key.concat('=', value));
		});
	}
	catch (e)
	{
		Error = Application.processError(e);
	}

%>


<!DOCTYPE html>
<html <%= Language ? 'lang="' + Language.replace('_', '-') + '"' : '' %>>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
		<title>My Account</title>

		<!--[if lte IE 9]>
		<%
			var ie_css_files = app_includes.myaccount.ie;
			for(var i=0; i < ie_css_files.length; i++)
			{
		%><link rel="stylesheet" href="<%= ROOT %>{{#if distro.isSCLite}}tmp/{{/if}}<%= ie_css_files[i] %>?t={{timestamp}}">
		<%
			}
		%>
		<![endif]-->

		<!--[if lt IE 9]>
			<link href="<%= ROOT %>javascript/respond-proxy.html" id="respond-proxy" rel="respond-proxy" />
			<link href="/javascript/respond.proxy.gif" id="respond-redirect" rel="respond-redirect" />
			<script src="<%= ROOT %>javascript/html5shiv.min.js"></script>
			<script src="<%= ROOT %>javascript/respond.min.js"></script>
			<script src="<%= ROOT %>javascript/respond.proxy.js"></script>
		<![endif]-->

		<%= (siteType && siteType === 'STANDARD') ? getPageFullHead() : '' %>
		<script>
			{{{dependencies}}}
			SC.isDevelopment = true;
			
			loadJSON('<%= session.getAbsoluteUrl2("services/MyAccountEnvironment.Service.ss?" + environmentParameters.join("&") ) %>&t={{timestamp}}', 'myAccountEnvironment')
			.done(function(env){
				merge(SC, env);
				SC.ENVIRONMENT.isTouchEnabled = ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch;
				document.documentElement.className = (SC.ENVIRONMENT.isTouchEnabled) ? 'touch' : 'no-touch';
                
				loadScript('<%=session.getAbsoluteUrl2("languages")%>/myaccount_' + SC.ENVIRONMENT.currentLanguage.locale + '.js?t={{timestamp}}');
			});
			//Define a function to load script at runtime. The script can be removed of the generated html by the server seo, please see SCA.Checkout.Starter.js.
			function loadScript (url)
			{
				'use strict';
				var reference_tag = document.getElementsByTagName("script")[0];
				var new_script_tag = document.createElement("script");
				new_script_tag.src = url;
				new_script_tag.type = "text/javascript";
				new_script_tag.async = false;
				reference_tag.parentNode.insertBefore(new_script_tag, reference_tag);
			}

            SC.extensionModules = [];
			SC.addExtensionModule = function addExtensionModule(appModuleName) {
				SC.extensionModules.push(appModuleName);
			};
		</script>

		<script src="<%= session.getAbsoluteUrl2('myaccount.environment.shortcache.ssp?X-SC-Touchpoint=myaccount') %>&t={{timestamp}}"></script>
		<script src="<%= session.getAbsoluteUrl2('customFieldsMetadata.ssp?')%>t={{timestamp}}"></script>
		<% if (Error) { %>
		<script>SC.ENVIRONMENT.contextError = <%= JSON.stringify(Error) %>;</script>
		<% } %>
	</head>
	<body>

	<% if (siteType && siteType === 'STANDARD'){ %>
		<div id='div__header' style="overflow: hidden;" class='noprint' leftmargin='0' topmargin='0' marginwidth='1' >
			<table border='0' cellspacing='0' cellpadding='0' width='100%'>
				<%= getPageTop() %>
			</table>
		</div>
	<% } %>
		<noscript>
			<div class="alert alert-error alert-noscript">
				<strong>Javascript is disabled on your browser.</strong><br>
				To view this site, you must enable JavaScript or upgrade to a JavaScript-capable browser.
			</div>
		</noscript>

		<div id="main" class="main"></div>


<script type="text/javascript">
<%
    var js_files = _.difference(app_includes.myaccount.js, app_includes.myaccount.templates)
    ,	extensions_js = isExtended ? _.last(js_files) : ''
    ,	core_js = _.without(js_files, extensions_js);
%>

    var isExtended = !!<%= isExtended %>
	,	local_dependencies = {
			css: '<%= session.getAbsoluteUrl2(app_includes.myaccount.css[0])%>?t={{timestamp}}'
		,	templates: '<%= session.getAbsoluteUrl2(app_includes.myaccount.templates[0])%>?t={{timestamp}}'
		,	js_core: '<%= session.getAbsoluteUrl2(core_js[0]) %>?t={{timestamp}}'
		};
    
    if(isExtended)
	{
		local_dependencies.js_extensions = '<%= session.getAbsoluteUrl2(extensions_js)%>?t={{timestamp}}';
	}

    if(!SC.isPageGenerator())
    {
        var local_resources_promise = new Deferred();
        window.loadedResourcesPromises['local_resources_promise'] = local_resources_promise;
        
        loadJSON('<%= ROOT %>who/myaccount', 'who_service').done(function(resources)
        {
            var current_promise = (new Deferred()).resolve();
            _each(resources, function(resource)
            {
                //If "who" didn't provide a local url use the backend one
                var url = resource.url || local_dependencies[resource.resource];

                if(url)
                {
                    var promise = new Deferred();
                    current_promise.done(function()
                    {
                        var tag = document.createElement(resource.tag);

                        if(resource.tag === 'link')
                        {
                            tag.rel = "stylesheet";
                            tag.type = "text/css";                   
                            tag.href = url;
                            promise.resolve();
                        }
                        else
                        {
                            tag.type = 'text/javascript';
                            tag.src = url;
                            //called in this way to don't lose the promise context
                            tag.onload = function(){
                                promise.resolve();
                            };
                        }
                        document.getElementsByTagName("head")[0].appendChild(tag);
                    });
                    current_promise = promise;
                }
            });

            //called in this way to don't lose the promise context
            current_promise.done(function()
            {
                local_resources_promise.resolve();
            });
        });

        {{{applicationStarter}}}
    }
</script>

<script>
    if ('<%= parameters.fragment %>' !== 'undefined')
    {
        window.location.hash = '<%= parameters.fragment %>';
    }
</script>
</body>
            
</html>
