'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _fsPromise = require('fs-promise');

var _fsPromise2 = _interopRequireDefault(_fsPromise);

var _css = require('css');

var _css2 = _interopRequireDefault(_css);

var _constants = require('./constants');

var _fsUtils = require('./fs-utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint no-use-before-define: 0 */


function count(ast) {
  function countRules(rules) {
    return rules.reduce(function (acc, rule) {
      return acc + count(rule);
    }, 0);
  }

  switch (ast.type) {
    case 'stylesheet':
      return countRules(ast.stylesheet.rules);
    case 'rule':
      return ast.selectors.length;
    // Don't affect selector limit
    case 'comment':
    case 'font-face':
    case 'keyframes':
    case 'import':
    case 'supports':
    case 'charset':
    case 'namespace':
      return 0;
    case 'page':
      return 1;
    default:
      return countRules(ast.rules);
  }
}

function countFile(filepath, options) {
  return _fsPromise2.default.readFile(filepath, { encoding: 'utf8' }).then(function (contents) {
    var ast = _css2.default.parse(contents);
    var selectorCount = count(ast);

    return {
      filepath: filepath,
      selectorCount: selectorCount,
      exceedsLimit: selectorCount > _constants.SELECTOR_LIMIT
    };
  });
}

function countPath(filepath, options) {
  options = options || {};

  return (0, _fsUtils.expand)(filepath).filter(function (x) {
    return (/\.css$/.test(x)
    );
  }).map(function (x) {
    return countFile(x, options);
  }).flatMap(function (x) {
    if (options.progress) {
      options.progress(x.filepath);
    }

    return x;
  }).reduce(function (acc, x) {
    return acc.concat([x]);
  }, []).toPromise(_promise2.default);
}

exports.default = {
  count: count,
  countPath: countPath
};
module.exports = exports['default'];